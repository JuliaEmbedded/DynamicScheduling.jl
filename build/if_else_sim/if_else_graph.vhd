-- ==============================================================
-- Generated by Dot2Vhdl ver. 0.21
-- File created: Fri May 22 21:12:43 2020

-- ==============================================================
library IEEE; 
use IEEE.std_logic_1164.all; 
use IEEE.numeric_std.all; 
use work.customTypes.all; 
-- ==============================================================
entity if_else_graph is 
port (
	clk:  in std_logic;
	rst:  in std_logic;
	start_in:  in std_logic_vector (0 downto 0);
	start_valid:  in std_logic;
	start_ready:  out std_logic;
	end_out:  out std_logic_vector (31 downto 0);
	end_valid:  out std_logic;
	end_ready:  in std_logic;
	a_din : in std_logic_vector (31 downto 0);
	a_valid_in : in std_logic;
	a_ready_out : out std_logic;
	b_din : in std_logic_vector (31 downto 0);
	b_valid_in : in std_logic;
	b_ready_out : out std_logic);
end;

architecture behavioral of if_else_graph is 

	signal sub_0_clk : std_logic;
	signal sub_0_rst : std_logic;
	signal sub_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sub_0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal sub_0_pValidArray_0 : std_logic;
	signal sub_0_pValidArray_1 : std_logic;
	signal sub_0_readyArray_0 : std_logic;
	signal sub_0_readyArray_1 : std_logic;
	signal sub_0_nReadyArray_0 : std_logic;
	signal sub_0_validArray_0 : std_logic;
	signal sub_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal icmp_slt_0_clk : std_logic;
	signal icmp_slt_0_rst : std_logic;
	signal icmp_slt_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal icmp_slt_0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal icmp_slt_0_pValidArray_0 : std_logic;
	signal icmp_slt_0_pValidArray_1 : std_logic;
	signal icmp_slt_0_readyArray_0 : std_logic;
	signal icmp_slt_0_readyArray_1 : std_logic;
	signal icmp_slt_0_nReadyArray_0 : std_logic;
	signal icmp_slt_0_validArray_0 : std_logic;
	signal icmp_slt_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal branchC_0_clk : std_logic;
	signal branchC_0_rst : std_logic;
	signal branchC_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_0_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branchC_0_pValidArray_0 : std_logic;
	signal branchC_0_pValidArray_1 : std_logic;
	signal branchC_0_readyArray_0 : std_logic;
	signal branchC_0_readyArray_1 : std_logic;
	signal branchC_0_nReadyArray_0 : std_logic;
	signal branchC_0_validArray_0 : std_logic;
	signal branchC_0_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_0_nReadyArray_1 : std_logic;
	signal branchC_0_validArray_1 : std_logic;
	signal branchC_0_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal mul_0_clk : std_logic;
	signal mul_0_rst : std_logic;
	signal mul_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mul_0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mul_0_pValidArray_0 : std_logic;
	signal mul_0_pValidArray_1 : std_logic;
	signal mul_0_readyArray_0 : std_logic;
	signal mul_0_readyArray_1 : std_logic;
	signal mul_0_nReadyArray_0 : std_logic;
	signal mul_0_validArray_0 : std_logic;
	signal mul_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal ret_0_clk : std_logic;
	signal ret_0_rst : std_logic;
	signal ret_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal ret_0_pValidArray_0 : std_logic;
	signal ret_0_readyArray_0 : std_logic;
	signal ret_0_nReadyArray_0 : std_logic;
	signal ret_0_validArray_0 : std_logic;
	signal ret_0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal icmp_slt_1_clk : std_logic;
	signal icmp_slt_1_rst : std_logic;
	signal icmp_slt_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal icmp_slt_1_dataInArray_1 : std_logic_vector(31 downto 0);
	signal icmp_slt_1_pValidArray_0 : std_logic;
	signal icmp_slt_1_pValidArray_1 : std_logic;
	signal icmp_slt_1_readyArray_0 : std_logic;
	signal icmp_slt_1_readyArray_1 : std_logic;
	signal icmp_slt_1_nReadyArray_0 : std_logic;
	signal icmp_slt_1_validArray_0 : std_logic;
	signal icmp_slt_1_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal branchC_1_clk : std_logic;
	signal branchC_1_rst : std_logic;
	signal branchC_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal branchC_1_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branchC_1_pValidArray_0 : std_logic;
	signal branchC_1_pValidArray_1 : std_logic;
	signal branchC_1_readyArray_0 : std_logic;
	signal branchC_1_readyArray_1 : std_logic;
	signal branchC_1_nReadyArray_0 : std_logic;
	signal branchC_1_validArray_0 : std_logic;
	signal branchC_1_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal branchC_1_nReadyArray_1 : std_logic;
	signal branchC_1_validArray_1 : std_logic;
	signal branchC_1_dataOutArray_1 : std_logic_vector(0 downto 0);

	signal mul_1_clk : std_logic;
	signal mul_1_rst : std_logic;
	signal mul_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mul_1_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mul_1_pValidArray_0 : std_logic;
	signal mul_1_pValidArray_1 : std_logic;
	signal mul_1_readyArray_0 : std_logic;
	signal mul_1_readyArray_1 : std_logic;
	signal mul_1_nReadyArray_0 : std_logic;
	signal mul_1_validArray_0 : std_logic;
	signal mul_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal ret_1_clk : std_logic;
	signal ret_1_rst : std_logic;
	signal ret_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal ret_1_pValidArray_0 : std_logic;
	signal ret_1_readyArray_0 : std_logic;
	signal ret_1_nReadyArray_0 : std_logic;
	signal ret_1_validArray_0 : std_logic;
	signal ret_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal ret_2_clk : std_logic;
	signal ret_2_rst : std_logic;
	signal ret_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal ret_2_pValidArray_0 : std_logic;
	signal ret_2_readyArray_0 : std_logic;
	signal ret_2_nReadyArray_0 : std_logic;
	signal ret_2_validArray_0 : std_logic;
	signal ret_2_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal a_clk : std_logic;
	signal a_rst : std_logic;
	signal a_dataInArray_0 : std_logic_vector(31 downto 0);
	signal a_pValidArray_0 : std_logic;
	signal a_readyArray_0 : std_logic;
	signal a_nReadyArray_0 : std_logic;
	signal a_validArray_0 : std_logic;
	signal a_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal b_clk : std_logic;
	signal b_rst : std_logic;
	signal b_dataInArray_0 : std_logic_vector(31 downto 0);
	signal b_pValidArray_0 : std_logic;
	signal b_readyArray_0 : std_logic;
	signal b_nReadyArray_0 : std_logic;
	signal b_validArray_0 : std_logic;
	signal b_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_a0_clk : std_logic;
	signal phi_a0_rst : std_logic;
	signal phi_a0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal phi_a0_pValidArray_0 : std_logic;
	signal phi_a0_readyArray_0 : std_logic;
	signal phi_a0_nReadyArray_0 : std_logic;
	signal phi_a0_validArray_0 : std_logic;
	signal phi_a0_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_a1_clk : std_logic;
	signal phi_a1_rst : std_logic;
	signal phi_a1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal phi_a1_pValidArray_0 : std_logic;
	signal phi_a1_readyArray_0 : std_logic;
	signal phi_a1_nReadyArray_0 : std_logic;
	signal phi_a1_validArray_0 : std_logic;
	signal phi_a1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_a2_clk : std_logic;
	signal phi_a2_rst : std_logic;
	signal phi_a2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal phi_a2_pValidArray_0 : std_logic;
	signal phi_a2_readyArray_0 : std_logic;
	signal phi_a2_nReadyArray_0 : std_logic;
	signal phi_a2_validArray_0 : std_logic;
	signal phi_a2_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_a3_clk : std_logic;
	signal phi_a3_rst : std_logic;
	signal phi_a3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal phi_a3_pValidArray_0 : std_logic;
	signal phi_a3_readyArray_0 : std_logic;
	signal phi_a3_nReadyArray_0 : std_logic;
	signal phi_a3_validArray_0 : std_logic;
	signal phi_a3_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_a4_clk : std_logic;
	signal phi_a4_rst : std_logic;
	signal phi_a4_dataInArray_0 : std_logic_vector(31 downto 0);
	signal phi_a4_pValidArray_0 : std_logic;
	signal phi_a4_readyArray_0 : std_logic;
	signal phi_a4_nReadyArray_0 : std_logic;
	signal phi_a4_validArray_0 : std_logic;
	signal phi_a4_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_a5_clk : std_logic;
	signal phi_a5_rst : std_logic;
	signal phi_a5_dataInArray_0 : std_logic_vector(31 downto 0);
	signal phi_a5_pValidArray_0 : std_logic;
	signal phi_a5_readyArray_0 : std_logic;
	signal phi_a5_nReadyArray_0 : std_logic;
	signal phi_a5_validArray_0 : std_logic;
	signal phi_a5_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_a6_clk : std_logic;
	signal phi_a6_rst : std_logic;
	signal phi_a6_dataInArray_0 : std_logic_vector(31 downto 0);
	signal phi_a6_pValidArray_0 : std_logic;
	signal phi_a6_readyArray_0 : std_logic;
	signal phi_a6_nReadyArray_0 : std_logic;
	signal phi_a6_validArray_0 : std_logic;
	signal phi_a6_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal phi_a7_clk : std_logic;
	signal phi_a7_rst : std_logic;
	signal phi_a7_dataInArray_0 : std_logic_vector(31 downto 0);
	signal phi_a7_pValidArray_0 : std_logic;
	signal phi_a7_readyArray_0 : std_logic;
	signal phi_a7_nReadyArray_0 : std_logic;
	signal phi_a7_validArray_0 : std_logic;
	signal phi_a7_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal branch_2_clk : std_logic;
	signal branch_2_rst : std_logic;
	signal branch_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_2_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_2_pValidArray_0 : std_logic;
	signal branch_2_pValidArray_1 : std_logic;
	signal branch_2_readyArray_0 : std_logic;
	signal branch_2_readyArray_1 : std_logic;
	signal branch_2_nReadyArray_0 : std_logic;
	signal branch_2_validArray_0 : std_logic;
	signal branch_2_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_2_nReadyArray_1 : std_logic;
	signal branch_2_validArray_1 : std_logic;
	signal branch_2_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_3_clk : std_logic;
	signal branch_3_rst : std_logic;
	signal branch_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_3_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_3_pValidArray_0 : std_logic;
	signal branch_3_pValidArray_1 : std_logic;
	signal branch_3_readyArray_0 : std_logic;
	signal branch_3_readyArray_1 : std_logic;
	signal branch_3_nReadyArray_0 : std_logic;
	signal branch_3_validArray_0 : std_logic;
	signal branch_3_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_3_nReadyArray_1 : std_logic;
	signal branch_3_validArray_1 : std_logic;
	signal branch_3_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_4_clk : std_logic;
	signal branch_4_rst : std_logic;
	signal branch_4_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_4_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_4_pValidArray_0 : std_logic;
	signal branch_4_pValidArray_1 : std_logic;
	signal branch_4_readyArray_0 : std_logic;
	signal branch_4_readyArray_1 : std_logic;
	signal branch_4_nReadyArray_0 : std_logic;
	signal branch_4_validArray_0 : std_logic;
	signal branch_4_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_4_nReadyArray_1 : std_logic;
	signal branch_4_validArray_1 : std_logic;
	signal branch_4_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_5_clk : std_logic;
	signal branch_5_rst : std_logic;
	signal branch_5_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_5_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_5_pValidArray_0 : std_logic;
	signal branch_5_pValidArray_1 : std_logic;
	signal branch_5_readyArray_0 : std_logic;
	signal branch_5_readyArray_1 : std_logic;
	signal branch_5_nReadyArray_0 : std_logic;
	signal branch_5_validArray_0 : std_logic;
	signal branch_5_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_5_nReadyArray_1 : std_logic;
	signal branch_5_validArray_1 : std_logic;
	signal branch_5_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal branch_6_clk : std_logic;
	signal branch_6_rst : std_logic;
	signal branch_6_dataInArray_0 : std_logic_vector(31 downto 0);
	signal branch_6_dataInArray_1 : std_logic_vector (0 downto 0);
	signal branch_6_pValidArray_0 : std_logic;
	signal branch_6_pValidArray_1 : std_logic;
	signal branch_6_readyArray_0 : std_logic;
	signal branch_6_readyArray_1 : std_logic;
	signal branch_6_nReadyArray_0 : std_logic;
	signal branch_6_validArray_0 : std_logic;
	signal branch_6_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal branch_6_nReadyArray_1 : std_logic;
	signal branch_6_validArray_1 : std_logic;
	signal branch_6_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal end_0_clk : std_logic;
	signal end_0_rst : std_logic;
	signal end_0_dataInArray_0 : std_logic_vector(31 downto 0);
	signal end_0_dataInArray_1 : std_logic_vector(31 downto 0);
	signal end_0_dataInArray_2 : std_logic_vector(31 downto 0);
	signal end_0_pValidArray_0 : std_logic;
	signal end_0_pValidArray_1 : std_logic;
	signal end_0_pValidArray_2 : std_logic;
	signal end_0_readyArray_0 : std_logic;
	signal end_0_readyArray_1 : std_logic;
	signal end_0_readyArray_2 : std_logic;
	signal end_0_nReadyArray_0 : std_logic;
	signal end_0_validArray_0 : std_logic;
	signal end_0_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal end_0_validArray_1 :  std_logic;
	signal end_0_dataOutArray_1 :  std_logic_vector (31 downto 0);
	signal end_0_nReadyArray_1 :  std_logic;

	signal start_0_clk : std_logic;
	signal start_0_rst : std_logic;
	signal start_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal start_0_pValidArray_0 : std_logic;
	signal start_0_readyArray_0 : std_logic;
	signal start_0_nReadyArray_0 : std_logic;
	signal start_0_validArray_0 : std_logic;
	signal start_0_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal phiC_a8_clk : std_logic;
	signal phiC_a8_rst : std_logic;
	signal phiC_a8_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_a8_pValidArray_0 : std_logic;
	signal phiC_a8_readyArray_0 : std_logic;
	signal phiC_a8_nReadyArray_0 : std_logic;
	signal phiC_a8_validArray_0 : std_logic;
	signal phiC_a8_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal phiC_a9_clk : std_logic;
	signal phiC_a9_rst : std_logic;
	signal phiC_a9_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_a9_pValidArray_0 : std_logic;
	signal phiC_a9_readyArray_0 : std_logic;
	signal phiC_a9_nReadyArray_0 : std_logic;
	signal phiC_a9_validArray_0 : std_logic;
	signal phiC_a9_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal phiC_a10_clk : std_logic;
	signal phiC_a10_rst : std_logic;
	signal phiC_a10_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_a10_pValidArray_0 : std_logic;
	signal phiC_a10_readyArray_0 : std_logic;
	signal phiC_a10_nReadyArray_0 : std_logic;
	signal phiC_a10_validArray_0 : std_logic;
	signal phiC_a10_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal phiC_a11_clk : std_logic;
	signal phiC_a11_rst : std_logic;
	signal phiC_a11_dataInArray_0 : std_logic_vector(0 downto 0);
	signal phiC_a11_pValidArray_0 : std_logic;
	signal phiC_a11_readyArray_0 : std_logic;
	signal phiC_a11_nReadyArray_0 : std_logic;
	signal phiC_a11_validArray_0 : std_logic;
	signal phiC_a11_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal sink_0_clk : std_logic;
	signal sink_0_rst : std_logic;
	signal sink_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_0_pValidArray_0 : std_logic;
	signal sink_0_readyArray_0 : std_logic;

	signal sink_1_clk : std_logic;
	signal sink_1_rst : std_logic;
	signal sink_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_1_pValidArray_0 : std_logic;
	signal sink_1_readyArray_0 : std_logic;

	signal sink_2_clk : std_logic;
	signal sink_2_rst : std_logic;
	signal sink_2_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_2_pValidArray_0 : std_logic;
	signal sink_2_readyArray_0 : std_logic;

	signal fork_0_clk : std_logic;
	signal fork_0_rst : std_logic;
	signal fork_0_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork_0_pValidArray_0 : std_logic;
	signal fork_0_readyArray_0 : std_logic;
	signal fork_0_nReadyArray_0 : std_logic;
	signal fork_0_validArray_0 : std_logic;
	signal fork_0_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork_0_nReadyArray_1 : std_logic;
	signal fork_0_validArray_1 : std_logic;
	signal fork_0_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal fork_0_nReadyArray_2 : std_logic;
	signal fork_0_validArray_2 : std_logic;
	signal fork_0_dataOutArray_2 : std_logic_vector(0 downto 0);
	signal fork_0_nReadyArray_3 : std_logic;
	signal fork_0_validArray_3 : std_logic;
	signal fork_0_dataOutArray_3 : std_logic_vector(0 downto 0);

	signal fork_1_clk : std_logic;
	signal fork_1_rst : std_logic;
	signal fork_1_dataInArray_0 : std_logic_vector(0 downto 0);
	signal fork_1_pValidArray_0 : std_logic;
	signal fork_1_readyArray_0 : std_logic;
	signal fork_1_nReadyArray_0 : std_logic;
	signal fork_1_validArray_0 : std_logic;
	signal fork_1_dataOutArray_0 : std_logic_vector(0 downto 0);
	signal fork_1_nReadyArray_1 : std_logic;
	signal fork_1_validArray_1 : std_logic;
	signal fork_1_dataOutArray_1 : std_logic_vector(0 downto 0);
	signal fork_1_nReadyArray_2 : std_logic;
	signal fork_1_validArray_2 : std_logic;
	signal fork_1_dataOutArray_2 : std_logic_vector(0 downto 0);

	signal fork_2_clk : std_logic;
	signal fork_2_rst : std_logic;
	signal fork_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_2_pValidArray_0 : std_logic;
	signal fork_2_readyArray_0 : std_logic;
	signal fork_2_nReadyArray_0 : std_logic;
	signal fork_2_validArray_0 : std_logic;
	signal fork_2_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_2_nReadyArray_1 : std_logic;
	signal fork_2_validArray_1 : std_logic;
	signal fork_2_dataOutArray_1 : std_logic_vector(31 downto 0);
	signal fork_2_nReadyArray_2 : std_logic;
	signal fork_2_validArray_2 : std_logic;
	signal fork_2_dataOutArray_2 : std_logic_vector(31 downto 0);

	signal fork_3_clk : std_logic;
	signal fork_3_rst : std_logic;
	signal fork_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_3_pValidArray_0 : std_logic;
	signal fork_3_readyArray_0 : std_logic;
	signal fork_3_nReadyArray_0 : std_logic;
	signal fork_3_validArray_0 : std_logic;
	signal fork_3_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_3_nReadyArray_1 : std_logic;
	signal fork_3_validArray_1 : std_logic;
	signal fork_3_dataOutArray_1 : std_logic_vector(31 downto 0);
	signal fork_3_nReadyArray_2 : std_logic;
	signal fork_3_validArray_2 : std_logic;
	signal fork_3_dataOutArray_2 : std_logic_vector(31 downto 0);

	signal fork_4_clk : std_logic;
	signal fork_4_rst : std_logic;
	signal fork_4_dataInArray_0 : std_logic_vector(31 downto 0);
	signal fork_4_pValidArray_0 : std_logic;
	signal fork_4_readyArray_0 : std_logic;
	signal fork_4_nReadyArray_0 : std_logic;
	signal fork_4_validArray_0 : std_logic;
	signal fork_4_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal fork_4_nReadyArray_1 : std_logic;
	signal fork_4_validArray_1 : std_logic;
	signal fork_4_dataOutArray_1 : std_logic_vector(31 downto 0);

	signal sink_3_clk : std_logic;
	signal sink_3_rst : std_logic;
	signal sink_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sink_3_pValidArray_0 : std_logic;
	signal sink_3_readyArray_0 : std_logic;

	signal sink_4_clk : std_logic;
	signal sink_4_rst : std_logic;
	signal sink_4_dataInArray_0 : std_logic_vector(31 downto 0);
	signal sink_4_pValidArray_0 : std_logic;
	signal sink_4_readyArray_0 : std_logic;

begin


	sub_0_clk <= clk;
	sub_0_rst <= rst;
	branch_2_pValidArray_0 <= sub_0_validArray_0;
	sub_0_nReadyArray_0 <= branch_2_readyArray_0;
	branch_2_dataInArray_0 <= sub_0_dataOutArray_0;

	icmp_slt_0_clk <= clk;
	icmp_slt_0_rst <= rst;
	fork_0_pValidArray_0 <= icmp_slt_0_validArray_0;
	icmp_slt_0_nReadyArray_0 <= fork_0_readyArray_0;
	fork_0_dataInArray_0 <= icmp_slt_0_dataOutArray_0;

	branchC_0_clk <= clk;
	branchC_0_rst <= rst;
	phiC_a8_pValidArray_0 <= branchC_0_validArray_0;
	branchC_0_nReadyArray_0 <= phiC_a8_readyArray_0;
	phiC_a8_dataInArray_0 <= branchC_0_dataOutArray_0;
	phiC_a9_pValidArray_0 <= branchC_0_validArray_1;
	branchC_0_nReadyArray_1 <= phiC_a9_readyArray_0;
	phiC_a9_dataInArray_0 <= branchC_0_dataOutArray_1;

	mul_0_clk <= clk;
	mul_0_rst <= rst;
	ret_0_pValidArray_0 <= mul_0_validArray_0;
	mul_0_nReadyArray_0 <= ret_0_readyArray_0;
	ret_0_dataInArray_0 <= mul_0_dataOutArray_0;

	ret_0_clk <= clk;
	ret_0_rst <= rst;
	end_0_pValidArray_0 <= ret_0_validArray_0;
	ret_0_nReadyArray_0 <= end_0_readyArray_0;
	end_0_dataInArray_0 <= ret_0_dataOutArray_0;

	icmp_slt_1_clk <= clk;
	icmp_slt_1_rst <= rst;
	fork_1_pValidArray_0 <= icmp_slt_1_validArray_0;
	icmp_slt_1_nReadyArray_0 <= fork_1_readyArray_0;
	fork_1_dataInArray_0 <= icmp_slt_1_dataOutArray_0;

	branchC_1_clk <= clk;
	branchC_1_rst <= rst;
	phiC_a10_pValidArray_0 <= branchC_1_validArray_0;
	branchC_1_nReadyArray_0 <= phiC_a10_readyArray_0;
	phiC_a10_dataInArray_0 <= branchC_1_dataOutArray_0;
	phiC_a11_pValidArray_0 <= branchC_1_validArray_1;
	branchC_1_nReadyArray_1 <= phiC_a11_readyArray_0;
	phiC_a11_dataInArray_0 <= branchC_1_dataOutArray_1;

	mul_1_clk <= clk;
	mul_1_rst <= rst;
	ret_1_pValidArray_0 <= mul_1_validArray_0;
	mul_1_nReadyArray_0 <= ret_1_readyArray_0;
	ret_1_dataInArray_0 <= mul_1_dataOutArray_0;

	ret_1_clk <= clk;
	ret_1_rst <= rst;
	end_0_pValidArray_1 <= ret_1_validArray_0;
	ret_1_nReadyArray_0 <= end_0_readyArray_1;
	end_0_dataInArray_1 <= ret_1_dataOutArray_0;

	ret_2_clk <= clk;
	ret_2_rst <= rst;
	end_0_pValidArray_2 <= ret_2_validArray_0;
	ret_2_nReadyArray_0 <= end_0_readyArray_2;
	end_0_dataInArray_2 <= ret_2_dataOutArray_0;

	a_clk <= clk;
	a_rst <= rst;
	a_dataInArray_0 <= a_din;
	a_pValidArray_0 <= start_valid;
	fork_2_pValidArray_0 <= a_validArray_0;
	a_nReadyArray_0 <= fork_2_readyArray_0;
	fork_2_dataInArray_0 <= a_dataOutArray_0;

	b_clk <= clk;
	b_rst <= rst;
	b_dataInArray_0 <= b_din;
	b_pValidArray_0 <= start_valid;
	fork_3_pValidArray_0 <= b_validArray_0;
	b_nReadyArray_0 <= fork_3_readyArray_0;
	fork_3_dataInArray_0 <= b_dataOutArray_0;

	phi_a0_clk <= clk;
	phi_a0_rst <= rst;
	mul_0_pValidArray_1 <= phi_a0_validArray_0;
	phi_a0_nReadyArray_0 <= mul_0_readyArray_1;
	mul_0_dataInArray_1 <= phi_a0_dataOutArray_0;

	phi_a1_clk <= clk;
	phi_a1_rst <= rst;
	mul_0_pValidArray_0 <= phi_a1_validArray_0;
	phi_a1_nReadyArray_0 <= mul_0_readyArray_0;
	mul_0_dataInArray_0 <= phi_a1_dataOutArray_0;

	phi_a2_clk <= clk;
	phi_a2_rst <= rst;
	fork_4_pValidArray_0 <= phi_a2_validArray_0;
	phi_a2_nReadyArray_0 <= fork_4_readyArray_0;
	fork_4_dataInArray_0 <= phi_a2_dataOutArray_0;

	phi_a3_clk <= clk;
	phi_a3_rst <= rst;
	icmp_slt_1_pValidArray_0 <= phi_a3_validArray_0;
	phi_a3_nReadyArray_0 <= icmp_slt_1_readyArray_0;
	icmp_slt_1_dataInArray_0 <= phi_a3_dataOutArray_0;

	phi_a4_clk <= clk;
	phi_a4_rst <= rst;
	branch_6_pValidArray_0 <= phi_a4_validArray_0;
	phi_a4_nReadyArray_0 <= branch_6_readyArray_0;
	branch_6_dataInArray_0 <= phi_a4_dataOutArray_0;

	phi_a5_clk <= clk;
	phi_a5_rst <= rst;
	mul_1_pValidArray_1 <= phi_a5_validArray_0;
	phi_a5_nReadyArray_0 <= mul_1_readyArray_1;
	mul_1_dataInArray_1 <= phi_a5_dataOutArray_0;

	phi_a6_clk <= clk;
	phi_a6_rst <= rst;
	mul_1_pValidArray_0 <= phi_a6_validArray_0;
	phi_a6_nReadyArray_0 <= mul_1_readyArray_0;
	mul_1_dataInArray_0 <= phi_a6_dataOutArray_0;

	phi_a7_clk <= clk;
	phi_a7_rst <= rst;
	ret_2_pValidArray_0 <= phi_a7_validArray_0;
	phi_a7_nReadyArray_0 <= ret_2_readyArray_0;
	ret_2_dataInArray_0 <= phi_a7_dataOutArray_0;

	branch_2_clk <= clk;
	branch_2_rst <= rst;
	phi_a1_pValidArray_0 <= branch_2_validArray_0;
	branch_2_nReadyArray_0 <= phi_a1_readyArray_0;
	phi_a1_dataInArray_0 <= branch_2_dataOutArray_0;
	phi_a4_pValidArray_0 <= branch_2_validArray_1;
	branch_2_nReadyArray_1 <= phi_a4_readyArray_0;
	phi_a4_dataInArray_0 <= branch_2_dataOutArray_1;

	branch_3_clk <= clk;
	branch_3_rst <= rst;
	phi_a0_pValidArray_0 <= branch_3_validArray_0;
	branch_3_nReadyArray_0 <= phi_a0_readyArray_0;
	phi_a0_dataInArray_0 <= branch_3_dataOutArray_0;
	phi_a3_pValidArray_0 <= branch_3_validArray_1;
	branch_3_nReadyArray_1 <= phi_a3_readyArray_0;
	phi_a3_dataInArray_0 <= branch_3_dataOutArray_1;

	branch_4_clk <= clk;
	branch_4_rst <= rst;
	sink_3_pValidArray_0 <= branch_4_validArray_0;
	branch_4_nReadyArray_0 <= sink_3_readyArray_0;
	sink_3_dataInArray_0 <= branch_4_dataOutArray_0;
	phi_a2_pValidArray_0 <= branch_4_validArray_1;
	branch_4_nReadyArray_1 <= phi_a2_readyArray_0;
	phi_a2_dataInArray_0 <= branch_4_dataOutArray_1;

	branch_5_clk <= clk;
	branch_5_rst <= rst;
	phi_a5_pValidArray_0 <= branch_5_validArray_0;
	branch_5_nReadyArray_0 <= phi_a5_readyArray_0;
	phi_a5_dataInArray_0 <= branch_5_dataOutArray_0;
	sink_4_pValidArray_0 <= branch_5_validArray_1;
	branch_5_nReadyArray_1 <= sink_4_readyArray_0;
	sink_4_dataInArray_0 <= branch_5_dataOutArray_1;

	branch_6_clk <= clk;
	branch_6_rst <= rst;
	phi_a6_pValidArray_0 <= branch_6_validArray_0;
	branch_6_nReadyArray_0 <= phi_a6_readyArray_0;
	phi_a6_dataInArray_0 <= branch_6_dataOutArray_0;
	phi_a7_pValidArray_0 <= branch_6_validArray_1;
	branch_6_nReadyArray_1 <= phi_a7_readyArray_0;
	phi_a7_dataInArray_0 <= branch_6_dataOutArray_1;

	end_0_clk <= clk;
	end_0_rst <= rst;
	end_valid <= end_0_validArray_0;
	end_out <= end_0_dataOutArray_0;
	end_0_nReadyArray_0 <= end_ready;

	start_0_clk <= clk;
	start_0_rst <= rst;
	start_0_pValidArray_0 <= start_valid;
	start_ready <= start_0_readyArray_0;
	branchC_0_pValidArray_0 <= start_0_validArray_0;
	start_0_nReadyArray_0 <= branchC_0_readyArray_0;
	branchC_0_dataInArray_0 <= start_0_dataOutArray_0;

	phiC_a8_clk <= clk;
	phiC_a8_rst <= rst;
	sink_0_pValidArray_0 <= phiC_a8_validArray_0;
	phiC_a8_nReadyArray_0 <= sink_0_readyArray_0;
	sink_0_dataInArray_0 <= phiC_a8_dataOutArray_0;

	phiC_a9_clk <= clk;
	phiC_a9_rst <= rst;
	branchC_1_pValidArray_0 <= phiC_a9_validArray_0;
	phiC_a9_nReadyArray_0 <= branchC_1_readyArray_0;
	branchC_1_dataInArray_0 <= phiC_a9_dataOutArray_0;

	phiC_a10_clk <= clk;
	phiC_a10_rst <= rst;
	sink_1_pValidArray_0 <= phiC_a10_validArray_0;
	phiC_a10_nReadyArray_0 <= sink_1_readyArray_0;
	sink_1_dataInArray_0 <= phiC_a10_dataOutArray_0;

	phiC_a11_clk <= clk;
	phiC_a11_rst <= rst;
	sink_2_pValidArray_0 <= phiC_a11_validArray_0;
	phiC_a11_nReadyArray_0 <= sink_2_readyArray_0;
	sink_2_dataInArray_0 <= phiC_a11_dataOutArray_0;

	sink_0_clk <= clk;
	sink_0_rst <= rst;

	sink_1_clk <= clk;
	sink_1_rst <= rst;

	sink_2_clk <= clk;
	sink_2_rst <= rst;

	fork_0_clk <= clk;
	fork_0_rst <= rst;
	branchC_0_pValidArray_1 <= fork_0_validArray_0;
	fork_0_nReadyArray_0 <= branchC_0_readyArray_1;
	branchC_0_dataInArray_1 <= fork_0_dataOutArray_0;
	branch_2_pValidArray_1 <= fork_0_validArray_1;
	fork_0_nReadyArray_1 <= branch_2_readyArray_1;
	branch_2_dataInArray_1 <= fork_0_dataOutArray_1;
	branch_3_pValidArray_1 <= fork_0_validArray_2;
	fork_0_nReadyArray_2 <= branch_3_readyArray_1;
	branch_3_dataInArray_1 <= fork_0_dataOutArray_2;
	branch_4_pValidArray_1 <= fork_0_validArray_3;
	fork_0_nReadyArray_3 <= branch_4_readyArray_1;
	branch_4_dataInArray_1 <= fork_0_dataOutArray_3;

	fork_1_clk <= clk;
	fork_1_rst <= rst;
	branchC_1_pValidArray_1 <= fork_1_validArray_0;
	fork_1_nReadyArray_0 <= branchC_1_readyArray_1;
	branchC_1_dataInArray_1 <= fork_1_dataOutArray_0;
	branch_5_pValidArray_1 <= fork_1_validArray_1;
	fork_1_nReadyArray_1 <= branch_5_readyArray_1;
	branch_5_dataInArray_1 <= fork_1_dataOutArray_1;
	branch_6_pValidArray_1 <= fork_1_validArray_2;
	fork_1_nReadyArray_2 <= branch_6_readyArray_1;
	branch_6_dataInArray_1 <= fork_1_dataOutArray_2;

	fork_2_clk <= clk;
	fork_2_rst <= rst;
	sub_0_pValidArray_0 <= fork_2_validArray_0;
	fork_2_nReadyArray_0 <= sub_0_readyArray_0;
	sub_0_dataInArray_0 <= fork_2_dataOutArray_0;
	icmp_slt_0_pValidArray_1 <= fork_2_validArray_1;
	fork_2_nReadyArray_1 <= icmp_slt_0_readyArray_1;
	icmp_slt_0_dataInArray_1 <= fork_2_dataOutArray_1;
	branch_3_pValidArray_0 <= fork_2_validArray_2;
	fork_2_nReadyArray_2 <= branch_3_readyArray_0;
	branch_3_dataInArray_0 <= fork_2_dataOutArray_2;

	fork_3_clk <= clk;
	fork_3_rst <= rst;
	sub_0_pValidArray_1 <= fork_3_validArray_0;
	fork_3_nReadyArray_0 <= sub_0_readyArray_1;
	sub_0_dataInArray_1 <= fork_3_dataOutArray_0;
	icmp_slt_0_pValidArray_0 <= fork_3_validArray_1;
	fork_3_nReadyArray_1 <= icmp_slt_0_readyArray_0;
	icmp_slt_0_dataInArray_0 <= fork_3_dataOutArray_1;
	branch_4_pValidArray_0 <= fork_3_validArray_2;
	fork_3_nReadyArray_2 <= branch_4_readyArray_0;
	branch_4_dataInArray_0 <= fork_3_dataOutArray_2;

	fork_4_clk <= clk;
	fork_4_rst <= rst;
	icmp_slt_1_pValidArray_1 <= fork_4_validArray_0;
	fork_4_nReadyArray_0 <= icmp_slt_1_readyArray_1;
	icmp_slt_1_dataInArray_1 <= fork_4_dataOutArray_0;
	branch_5_pValidArray_0 <= fork_4_validArray_1;
	fork_4_nReadyArray_1 <= branch_5_readyArray_0;
	branch_5_dataInArray_0 <= fork_4_dataOutArray_1;

	sink_3_clk <= clk;
	sink_3_rst <= rst;

	sink_4_clk <= clk;
	sink_4_rst <= rst;

sub_0: entity work.sub_op(arch) generic map (2,1,32,32)
port map (
	clk => sub_0_clk,
	rst => sub_0_rst,
	dataInArray(0) => sub_0_dataInArray_0,
	dataInArray(1) => sub_0_dataInArray_1,
	pValidArray(0) => sub_0_pValidArray_0,
	pValidArray(1) => sub_0_pValidArray_1,
	readyArray(0) => sub_0_readyArray_0,
	readyArray(1) => sub_0_readyArray_1,
	nReadyArray(0) => sub_0_nReadyArray_0,
	validArray(0) => sub_0_validArray_0,
	dataOutArray(0) => sub_0_dataOutArray_0
);

icmp_slt_0: entity work.icmp_slt_op(arch) generic map (2,1,32,1)
port map (
	clk => icmp_slt_0_clk,
	rst => icmp_slt_0_rst,
	dataInArray(0) => icmp_slt_0_dataInArray_0,
	dataInArray(1) => icmp_slt_0_dataInArray_1,
	pValidArray(0) => icmp_slt_0_pValidArray_0,
	pValidArray(1) => icmp_slt_0_pValidArray_1,
	readyArray(0) => icmp_slt_0_readyArray_0,
	readyArray(1) => icmp_slt_0_readyArray_1,
	nReadyArray(0) => icmp_slt_0_nReadyArray_0,
	validArray(0) => icmp_slt_0_validArray_0,
	dataOutArray(0) => icmp_slt_0_dataOutArray_0
);

branchC_0: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_0_clk,
	rst => branchC_0_rst,
	dataInArray(0) => branchC_0_dataInArray_0,
	Condition(0) => branchC_0_dataInArray_1,
	pValidArray(0) => branchC_0_pValidArray_0,
	pValidArray(1) => branchC_0_pValidArray_1,
	readyArray(0) => branchC_0_readyArray_0,
	readyArray(1) => branchC_0_readyArray_1,
	nReadyArray(0) => branchC_0_nReadyArray_0,
	nReadyArray(1) => branchC_0_nReadyArray_1,
	validArray(0) => branchC_0_validArray_0,
	validArray(1) => branchC_0_validArray_1,
	dataOutArray(0) => branchC_0_dataOutArray_0,
	dataOutArray(1) => branchC_0_dataOutArray_1
);

mul_0: entity work.mul_op(arch) generic map (2,1,32,32)
port map (
	clk => mul_0_clk,
	rst => mul_0_rst,
	dataInArray(0) => mul_0_dataInArray_0,
	dataInArray(1) => mul_0_dataInArray_1,
	pValidArray(0) => mul_0_pValidArray_0,
	pValidArray(1) => mul_0_pValidArray_1,
	readyArray(0) => mul_0_readyArray_0,
	readyArray(1) => mul_0_readyArray_1,
	nReadyArray(0) => mul_0_nReadyArray_0,
	validArray(0) => mul_0_validArray_0,
	dataOutArray(0) => mul_0_dataOutArray_0
);

ret_0: entity work.ret_op(arch) generic map (1,1,32,32)
port map (
	clk => ret_0_clk,
	rst => ret_0_rst,
	dataInArray(0) => ret_0_dataInArray_0,
	pValidArray(0) => ret_0_pValidArray_0,
	readyArray(0) => ret_0_readyArray_0,
	nReadyArray(0) => ret_0_nReadyArray_0,
	validArray(0) => ret_0_validArray_0,
	dataOutArray(0) => ret_0_dataOutArray_0
);

icmp_slt_1: entity work.icmp_slt_op(arch) generic map (2,1,32,1)
port map (
	clk => icmp_slt_1_clk,
	rst => icmp_slt_1_rst,
	dataInArray(0) => icmp_slt_1_dataInArray_0,
	dataInArray(1) => icmp_slt_1_dataInArray_1,
	pValidArray(0) => icmp_slt_1_pValidArray_0,
	pValidArray(1) => icmp_slt_1_pValidArray_1,
	readyArray(0) => icmp_slt_1_readyArray_0,
	readyArray(1) => icmp_slt_1_readyArray_1,
	nReadyArray(0) => icmp_slt_1_nReadyArray_0,
	validArray(0) => icmp_slt_1_validArray_0,
	dataOutArray(0) => icmp_slt_1_dataOutArray_0
);

branchC_1: entity work.Branch(arch) generic map (2,2,1,1)
port map (
	clk => branchC_1_clk,
	rst => branchC_1_rst,
	dataInArray(0) => branchC_1_dataInArray_0,
	Condition(0) => branchC_1_dataInArray_1,
	pValidArray(0) => branchC_1_pValidArray_0,
	pValidArray(1) => branchC_1_pValidArray_1,
	readyArray(0) => branchC_1_readyArray_0,
	readyArray(1) => branchC_1_readyArray_1,
	nReadyArray(0) => branchC_1_nReadyArray_0,
	nReadyArray(1) => branchC_1_nReadyArray_1,
	validArray(0) => branchC_1_validArray_0,
	validArray(1) => branchC_1_validArray_1,
	dataOutArray(0) => branchC_1_dataOutArray_0,
	dataOutArray(1) => branchC_1_dataOutArray_1
);

mul_1: entity work.mul_op(arch) generic map (2,1,32,32)
port map (
	clk => mul_1_clk,
	rst => mul_1_rst,
	dataInArray(0) => mul_1_dataInArray_0,
	dataInArray(1) => mul_1_dataInArray_1,
	pValidArray(0) => mul_1_pValidArray_0,
	pValidArray(1) => mul_1_pValidArray_1,
	readyArray(0) => mul_1_readyArray_0,
	readyArray(1) => mul_1_readyArray_1,
	nReadyArray(0) => mul_1_nReadyArray_0,
	validArray(0) => mul_1_validArray_0,
	dataOutArray(0) => mul_1_dataOutArray_0
);

ret_1: entity work.ret_op(arch) generic map (1,1,32,32)
port map (
	clk => ret_1_clk,
	rst => ret_1_rst,
	dataInArray(0) => ret_1_dataInArray_0,
	pValidArray(0) => ret_1_pValidArray_0,
	readyArray(0) => ret_1_readyArray_0,
	nReadyArray(0) => ret_1_nReadyArray_0,
	validArray(0) => ret_1_validArray_0,
	dataOutArray(0) => ret_1_dataOutArray_0
);

ret_2: entity work.ret_op(arch) generic map (1,1,32,32)
port map (
	clk => ret_2_clk,
	rst => ret_2_rst,
	dataInArray(0) => ret_2_dataInArray_0,
	pValidArray(0) => ret_2_pValidArray_0,
	readyArray(0) => ret_2_readyArray_0,
	nReadyArray(0) => ret_2_nReadyArray_0,
	validArray(0) => ret_2_validArray_0,
	dataOutArray(0) => ret_2_dataOutArray_0
);

a: entity work.start_node(arch) generic map (1,1,32,32)
port map (
	clk => a_clk,
	rst => a_rst,
	dataInArray(0) => a_dataInArray_0,
	pValidArray(0) => a_pValidArray_0,
	readyArray(0) => a_readyArray_0,
	nReadyArray(0) => a_nReadyArray_0,
	validArray(0) => a_validArray_0,
	dataOutArray(0) => a_dataOutArray_0
);

b: entity work.start_node(arch) generic map (1,1,32,32)
port map (
	clk => b_clk,
	rst => b_rst,
	dataInArray(0) => b_dataInArray_0,
	pValidArray(0) => b_pValidArray_0,
	readyArray(0) => b_readyArray_0,
	nReadyArray(0) => b_nReadyArray_0,
	validArray(0) => b_validArray_0,
	dataOutArray(0) => b_dataOutArray_0
);

phi_a0: entity work.merge(arch) generic map (1,1,32,32)
port map (
	clk => phi_a0_clk,
	rst => phi_a0_rst,
	dataInArray(0) => phi_a0_dataInArray_0,
	pValidArray(0) => phi_a0_pValidArray_0,
	readyArray(0) => phi_a0_readyArray_0,
	nReadyArray(0) => phi_a0_nReadyArray_0,
	validArray(0) => phi_a0_validArray_0,
	dataOutArray(0) => phi_a0_dataOutArray_0
);

phi_a1: entity work.merge(arch) generic map (1,1,32,32)
port map (
	clk => phi_a1_clk,
	rst => phi_a1_rst,
	dataInArray(0) => phi_a1_dataInArray_0,
	pValidArray(0) => phi_a1_pValidArray_0,
	readyArray(0) => phi_a1_readyArray_0,
	nReadyArray(0) => phi_a1_nReadyArray_0,
	validArray(0) => phi_a1_validArray_0,
	dataOutArray(0) => phi_a1_dataOutArray_0
);

phi_a2: entity work.merge(arch) generic map (1,1,32,32)
port map (
	clk => phi_a2_clk,
	rst => phi_a2_rst,
	dataInArray(0) => phi_a2_dataInArray_0,
	pValidArray(0) => phi_a2_pValidArray_0,
	readyArray(0) => phi_a2_readyArray_0,
	nReadyArray(0) => phi_a2_nReadyArray_0,
	validArray(0) => phi_a2_validArray_0,
	dataOutArray(0) => phi_a2_dataOutArray_0
);

phi_a3: entity work.merge(arch) generic map (1,1,32,32)
port map (
	clk => phi_a3_clk,
	rst => phi_a3_rst,
	dataInArray(0) => phi_a3_dataInArray_0,
	pValidArray(0) => phi_a3_pValidArray_0,
	readyArray(0) => phi_a3_readyArray_0,
	nReadyArray(0) => phi_a3_nReadyArray_0,
	validArray(0) => phi_a3_validArray_0,
	dataOutArray(0) => phi_a3_dataOutArray_0
);

phi_a4: entity work.merge(arch) generic map (1,1,32,32)
port map (
	clk => phi_a4_clk,
	rst => phi_a4_rst,
	dataInArray(0) => phi_a4_dataInArray_0,
	pValidArray(0) => phi_a4_pValidArray_0,
	readyArray(0) => phi_a4_readyArray_0,
	nReadyArray(0) => phi_a4_nReadyArray_0,
	validArray(0) => phi_a4_validArray_0,
	dataOutArray(0) => phi_a4_dataOutArray_0
);

phi_a5: entity work.merge(arch) generic map (1,1,32,32)
port map (
	clk => phi_a5_clk,
	rst => phi_a5_rst,
	dataInArray(0) => phi_a5_dataInArray_0,
	pValidArray(0) => phi_a5_pValidArray_0,
	readyArray(0) => phi_a5_readyArray_0,
	nReadyArray(0) => phi_a5_nReadyArray_0,
	validArray(0) => phi_a5_validArray_0,
	dataOutArray(0) => phi_a5_dataOutArray_0
);

phi_a6: entity work.merge(arch) generic map (1,1,32,32)
port map (
	clk => phi_a6_clk,
	rst => phi_a6_rst,
	dataInArray(0) => phi_a6_dataInArray_0,
	pValidArray(0) => phi_a6_pValidArray_0,
	readyArray(0) => phi_a6_readyArray_0,
	nReadyArray(0) => phi_a6_nReadyArray_0,
	validArray(0) => phi_a6_validArray_0,
	dataOutArray(0) => phi_a6_dataOutArray_0
);

phi_a7: entity work.merge(arch) generic map (1,1,32,32)
port map (
	clk => phi_a7_clk,
	rst => phi_a7_rst,
	dataInArray(0) => phi_a7_dataInArray_0,
	pValidArray(0) => phi_a7_pValidArray_0,
	readyArray(0) => phi_a7_readyArray_0,
	nReadyArray(0) => phi_a7_nReadyArray_0,
	validArray(0) => phi_a7_validArray_0,
	dataOutArray(0) => phi_a7_dataOutArray_0
);

branch_2: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_2_clk,
	rst => branch_2_rst,
	dataInArray(0) => branch_2_dataInArray_0,
	Condition(0) => branch_2_dataInArray_1,
	pValidArray(0) => branch_2_pValidArray_0,
	pValidArray(1) => branch_2_pValidArray_1,
	readyArray(0) => branch_2_readyArray_0,
	readyArray(1) => branch_2_readyArray_1,
	nReadyArray(0) => branch_2_nReadyArray_0,
	nReadyArray(1) => branch_2_nReadyArray_1,
	validArray(0) => branch_2_validArray_0,
	validArray(1) => branch_2_validArray_1,
	dataOutArray(0) => branch_2_dataOutArray_0,
	dataOutArray(1) => branch_2_dataOutArray_1
);

branch_3: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_3_clk,
	rst => branch_3_rst,
	dataInArray(0) => branch_3_dataInArray_0,
	Condition(0) => branch_3_dataInArray_1,
	pValidArray(0) => branch_3_pValidArray_0,
	pValidArray(1) => branch_3_pValidArray_1,
	readyArray(0) => branch_3_readyArray_0,
	readyArray(1) => branch_3_readyArray_1,
	nReadyArray(0) => branch_3_nReadyArray_0,
	nReadyArray(1) => branch_3_nReadyArray_1,
	validArray(0) => branch_3_validArray_0,
	validArray(1) => branch_3_validArray_1,
	dataOutArray(0) => branch_3_dataOutArray_0,
	dataOutArray(1) => branch_3_dataOutArray_1
);

branch_4: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_4_clk,
	rst => branch_4_rst,
	dataInArray(0) => branch_4_dataInArray_0,
	Condition(0) => branch_4_dataInArray_1,
	pValidArray(0) => branch_4_pValidArray_0,
	pValidArray(1) => branch_4_pValidArray_1,
	readyArray(0) => branch_4_readyArray_0,
	readyArray(1) => branch_4_readyArray_1,
	nReadyArray(0) => branch_4_nReadyArray_0,
	nReadyArray(1) => branch_4_nReadyArray_1,
	validArray(0) => branch_4_validArray_0,
	validArray(1) => branch_4_validArray_1,
	dataOutArray(0) => branch_4_dataOutArray_0,
	dataOutArray(1) => branch_4_dataOutArray_1
);

branch_5: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_5_clk,
	rst => branch_5_rst,
	dataInArray(0) => branch_5_dataInArray_0,
	Condition(0) => branch_5_dataInArray_1,
	pValidArray(0) => branch_5_pValidArray_0,
	pValidArray(1) => branch_5_pValidArray_1,
	readyArray(0) => branch_5_readyArray_0,
	readyArray(1) => branch_5_readyArray_1,
	nReadyArray(0) => branch_5_nReadyArray_0,
	nReadyArray(1) => branch_5_nReadyArray_1,
	validArray(0) => branch_5_validArray_0,
	validArray(1) => branch_5_validArray_1,
	dataOutArray(0) => branch_5_dataOutArray_0,
	dataOutArray(1) => branch_5_dataOutArray_1
);

branch_6: entity work.Branch(arch) generic map (2,2,32,32)
port map (
	clk => branch_6_clk,
	rst => branch_6_rst,
	dataInArray(0) => branch_6_dataInArray_0,
	Condition(0) => branch_6_dataInArray_1,
	pValidArray(0) => branch_6_pValidArray_0,
	pValidArray(1) => branch_6_pValidArray_1,
	readyArray(0) => branch_6_readyArray_0,
	readyArray(1) => branch_6_readyArray_1,
	nReadyArray(0) => branch_6_nReadyArray_0,
	nReadyArray(1) => branch_6_nReadyArray_1,
	validArray(0) => branch_6_validArray_0,
	validArray(1) => branch_6_validArray_1,
	dataOutArray(0) => branch_6_dataOutArray_0,
	dataOutArray(1) => branch_6_dataOutArray_1
);

end_0: entity work.end_node(arch) generic map (3,0,1,32,32)
port map (
	clk => end_0_clk,
	rst => end_0_rst,
	dataInArray(0) => end_0_dataInArray_0,
	dataInArray(1) => end_0_dataInArray_1,
	dataInArray(2) => end_0_dataInArray_2,
	pValidArray(0) => end_0_pValidArray_0,
	pValidArray(1) => end_0_pValidArray_1,
	pValidArray(2) => end_0_pValidArray_2,
	readyArray(0) => end_0_readyArray_0,
	readyArray(1) => end_0_readyArray_1,
	readyArray(2) => end_0_readyArray_2,
	dataOutArray(0) => end_0_dataOutArray_0,
	validArray(0) => end_0_validArray_0,
	nReadyArray(0) => end_0_nReadyArray_0
);

start_0: entity work.start_node(arch) generic map (1,1,1,1)
port map (
	clk => start_0_clk,
	rst => start_0_rst,
	dataInArray(0) => start_0_dataInArray_0,
	pValidArray(0) => start_0_pValidArray_0,
	readyArray(0) => start_0_readyArray_0,
	nReadyArray(0) => start_0_nReadyArray_0,
	validArray(0) => start_0_validArray_0,
	dataOutArray(0) => start_0_dataOutArray_0
);

phiC_a8: entity work.merge(arch) generic map (1,1,1,1)
port map (
	clk => phiC_a8_clk,
	rst => phiC_a8_rst,
	dataInArray(0) => phiC_a8_dataInArray_0,
	pValidArray(0) => phiC_a8_pValidArray_0,
	readyArray(0) => phiC_a8_readyArray_0,
	nReadyArray(0) => phiC_a8_nReadyArray_0,
	validArray(0) => phiC_a8_validArray_0,
	dataOutArray(0) => phiC_a8_dataOutArray_0
);

phiC_a9: entity work.merge(arch) generic map (1,1,1,1)
port map (
	clk => phiC_a9_clk,
	rst => phiC_a9_rst,
	dataInArray(0) => phiC_a9_dataInArray_0,
	pValidArray(0) => phiC_a9_pValidArray_0,
	readyArray(0) => phiC_a9_readyArray_0,
	nReadyArray(0) => phiC_a9_nReadyArray_0,
	validArray(0) => phiC_a9_validArray_0,
	dataOutArray(0) => phiC_a9_dataOutArray_0
);

phiC_a10: entity work.merge(arch) generic map (1,1,1,1)
port map (
	clk => phiC_a10_clk,
	rst => phiC_a10_rst,
	dataInArray(0) => phiC_a10_dataInArray_0,
	pValidArray(0) => phiC_a10_pValidArray_0,
	readyArray(0) => phiC_a10_readyArray_0,
	nReadyArray(0) => phiC_a10_nReadyArray_0,
	validArray(0) => phiC_a10_validArray_0,
	dataOutArray(0) => phiC_a10_dataOutArray_0
);

phiC_a11: entity work.merge(arch) generic map (1,1,1,1)
port map (
	clk => phiC_a11_clk,
	rst => phiC_a11_rst,
	dataInArray(0) => phiC_a11_dataInArray_0,
	pValidArray(0) => phiC_a11_pValidArray_0,
	readyArray(0) => phiC_a11_readyArray_0,
	nReadyArray(0) => phiC_a11_nReadyArray_0,
	validArray(0) => phiC_a11_validArray_0,
	dataOutArray(0) => phiC_a11_dataOutArray_0
);

sink_0: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_0_clk,
	rst => sink_0_rst,
	dataInArray(0) => sink_0_dataInArray_0,
	pValidArray(0) => sink_0_pValidArray_0,
	readyArray(0) => sink_0_readyArray_0
);

sink_1: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_1_clk,
	rst => sink_1_rst,
	dataInArray(0) => sink_1_dataInArray_0,
	pValidArray(0) => sink_1_pValidArray_0,
	readyArray(0) => sink_1_readyArray_0
);

sink_2: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_2_clk,
	rst => sink_2_rst,
	dataInArray(0) => sink_2_dataInArray_0,
	pValidArray(0) => sink_2_pValidArray_0,
	readyArray(0) => sink_2_readyArray_0
);

fork_0: entity work.fork(arch) generic map (1,4,1,1)
port map (
	clk => fork_0_clk,
	rst => fork_0_rst,
	dataInArray(0) => fork_0_dataInArray_0,
	pValidArray(0) => fork_0_pValidArray_0,
	readyArray(0) => fork_0_readyArray_0,
	nReadyArray(0) => fork_0_nReadyArray_0,
	nReadyArray(1) => fork_0_nReadyArray_1,
	nReadyArray(2) => fork_0_nReadyArray_2,
	nReadyArray(3) => fork_0_nReadyArray_3,
	validArray(0) => fork_0_validArray_0,
	validArray(1) => fork_0_validArray_1,
	validArray(2) => fork_0_validArray_2,
	validArray(3) => fork_0_validArray_3,
	dataOutArray(0) => fork_0_dataOutArray_0,
	dataOutArray(1) => fork_0_dataOutArray_1,
	dataOutArray(2) => fork_0_dataOutArray_2,
	dataOutArray(3) => fork_0_dataOutArray_3
);

fork_1: entity work.fork(arch) generic map (1,3,1,1)
port map (
	clk => fork_1_clk,
	rst => fork_1_rst,
	dataInArray(0) => fork_1_dataInArray_0,
	pValidArray(0) => fork_1_pValidArray_0,
	readyArray(0) => fork_1_readyArray_0,
	nReadyArray(0) => fork_1_nReadyArray_0,
	nReadyArray(1) => fork_1_nReadyArray_1,
	nReadyArray(2) => fork_1_nReadyArray_2,
	validArray(0) => fork_1_validArray_0,
	validArray(1) => fork_1_validArray_1,
	validArray(2) => fork_1_validArray_2,
	dataOutArray(0) => fork_1_dataOutArray_0,
	dataOutArray(1) => fork_1_dataOutArray_1,
	dataOutArray(2) => fork_1_dataOutArray_2
);

fork_2: entity work.fork(arch) generic map (1,3,32,32)
port map (
	clk => fork_2_clk,
	rst => fork_2_rst,
	dataInArray(0) => fork_2_dataInArray_0,
	pValidArray(0) => fork_2_pValidArray_0,
	readyArray(0) => fork_2_readyArray_0,
	nReadyArray(0) => fork_2_nReadyArray_0,
	nReadyArray(1) => fork_2_nReadyArray_1,
	nReadyArray(2) => fork_2_nReadyArray_2,
	validArray(0) => fork_2_validArray_0,
	validArray(1) => fork_2_validArray_1,
	validArray(2) => fork_2_validArray_2,
	dataOutArray(0) => fork_2_dataOutArray_0,
	dataOutArray(1) => fork_2_dataOutArray_1,
	dataOutArray(2) => fork_2_dataOutArray_2
);

fork_3: entity work.fork(arch) generic map (1,3,32,32)
port map (
	clk => fork_3_clk,
	rst => fork_3_rst,
	dataInArray(0) => fork_3_dataInArray_0,
	pValidArray(0) => fork_3_pValidArray_0,
	readyArray(0) => fork_3_readyArray_0,
	nReadyArray(0) => fork_3_nReadyArray_0,
	nReadyArray(1) => fork_3_nReadyArray_1,
	nReadyArray(2) => fork_3_nReadyArray_2,
	validArray(0) => fork_3_validArray_0,
	validArray(1) => fork_3_validArray_1,
	validArray(2) => fork_3_validArray_2,
	dataOutArray(0) => fork_3_dataOutArray_0,
	dataOutArray(1) => fork_3_dataOutArray_1,
	dataOutArray(2) => fork_3_dataOutArray_2
);

fork_4: entity work.fork(arch) generic map (1,2,32,32)
port map (
	clk => fork_4_clk,
	rst => fork_4_rst,
	dataInArray(0) => fork_4_dataInArray_0,
	pValidArray(0) => fork_4_pValidArray_0,
	readyArray(0) => fork_4_readyArray_0,
	nReadyArray(0) => fork_4_nReadyArray_0,
	nReadyArray(1) => fork_4_nReadyArray_1,
	validArray(0) => fork_4_validArray_0,
	validArray(1) => fork_4_validArray_1,
	dataOutArray(0) => fork_4_dataOutArray_0,
	dataOutArray(1) => fork_4_dataOutArray_1
);

sink_3: entity work.sink(arch) generic map (1,0,32,32)
port map (
	clk => sink_3_clk,
	rst => sink_3_rst,
	dataInArray(0) => sink_3_dataInArray_0,
	pValidArray(0) => sink_3_pValidArray_0,
	readyArray(0) => sink_3_readyArray_0
);

sink_4: entity work.sink(arch) generic map (1,0,32,32)
port map (
	clk => sink_4_clk,
	rst => sink_4_rst,
	dataInArray(0) => sink_4_dataInArray_0,
	pValidArray(0) => sink_4_pValidArray_0,
	readyArray(0) => sink_4_readyArray_0
);

end behavioral; 
