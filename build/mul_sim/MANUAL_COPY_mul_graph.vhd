-- ==============================================================
-- Generated by Dot2Vhdl ver. 0.21
-- File created: Mon Apr 27 18:06:57 2020

-- ==============================================================
library IEEE; 
use IEEE.std_logic_1164.all; 
use IEEE.numeric_std.all; 
use work.customTypes.all; 
-- ==============================================================
entity MANUAL_COPY_mul_graph is 
port (
	clk:  in std_logic;
	rst:  in std_logic;
	start_in:  in std_logic_vector (0 downto 0);
	start_valid:  in std_logic;
	start_ready:  out std_logic;
	end_out:  out std_logic_vector (31 downto 0);
	end_valid:  out std_logic;
	end_ready:  in std_logic;
	a4_din : in std_logic_vector (31 downto 0);
	a4_valid_in : in std_logic;
	a4_ready_out : out std_logic;
	b5_din : in std_logic_vector (31 downto 0);
	b5_valid_in : in std_logic;
	b5_ready_out : out std_logic;
	c6_din : in std_logic_vector (31 downto 0);
	c6_valid_in : in std_logic;
	c6_ready_out : out std_logic);
end;

architecture behavioral of MANUAL_COPY_mul_graph is 

	signal mul_1_clk : std_logic;
	signal mul_1_rst : std_logic;
	signal mul_1_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mul_1_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mul_1_pValidArray_0 : std_logic;
	signal mul_1_pValidArray_1 : std_logic;
	signal mul_1_readyArray_0 : std_logic;
	signal mul_1_readyArray_1 : std_logic;
	signal mul_1_nReadyArray_0 : std_logic;
	signal mul_1_validArray_0 : std_logic;
	signal mul_1_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal mul_2_clk : std_logic;
	signal mul_2_rst : std_logic;
	signal mul_2_dataInArray_0 : std_logic_vector(31 downto 0);
	signal mul_2_dataInArray_1 : std_logic_vector(31 downto 0);
	signal mul_2_pValidArray_0 : std_logic;
	signal mul_2_pValidArray_1 : std_logic;
	signal mul_2_readyArray_0 : std_logic;
	signal mul_2_readyArray_1 : std_logic;
	signal mul_2_nReadyArray_0 : std_logic;
	signal mul_2_validArray_0 : std_logic;
	signal mul_2_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal ret_3_clk : std_logic;
	signal ret_3_rst : std_logic;
	signal ret_3_dataInArray_0 : std_logic_vector(31 downto 0);
	signal ret_3_pValidArray_0 : std_logic;
	signal ret_3_readyArray_0 : std_logic;
	signal ret_3_nReadyArray_0 : std_logic;
	signal ret_3_validArray_0 : std_logic;
	signal ret_3_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal a4_clk : std_logic;
	signal a4_rst : std_logic;
	signal a4_dataInArray_0 : std_logic_vector(31 downto 0);
	signal a4_pValidArray_0 : std_logic;
	signal a4_readyArray_0 : std_logic;
	signal a4_nReadyArray_0 : std_logic;
	signal a4_validArray_0 : std_logic;
	signal a4_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal b5_clk : std_logic;
	signal b5_rst : std_logic;
	signal b5_dataInArray_0 : std_logic_vector(31 downto 0);
	signal b5_pValidArray_0 : std_logic;
	signal b5_readyArray_0 : std_logic;
	signal b5_nReadyArray_0 : std_logic;
	signal b5_validArray_0 : std_logic;
	signal b5_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal c6_clk : std_logic;
	signal c6_rst : std_logic;
	signal c6_dataInArray_0 : std_logic_vector(31 downto 0);
	signal c6_pValidArray_0 : std_logic;
	signal c6_readyArray_0 : std_logic;
	signal c6_nReadyArray_0 : std_logic;
	signal c6_validArray_0 : std_logic;
	signal c6_dataOutArray_0 : std_logic_vector(31 downto 0);

	signal end_7_clk : std_logic;
	signal end_7_rst : std_logic;
	signal end_7_dataInArray_0 : std_logic_vector(31 downto 0);
	signal end_7_pValidArray_0 : std_logic;
	signal end_7_readyArray_0 : std_logic;
	signal end_7_nReadyArray_0 : std_logic;
	signal end_7_validArray_0 : std_logic;
	signal end_7_dataOutArray_0 : std_logic_vector(31 downto 0);
	signal end_7_validArray_1 :  std_logic;
	signal end_7_dataOutArray_1 :  std_logic_vector (31 downto 0);
	signal end_7_nReadyArray_1 :  std_logic;

	signal start_8_clk : std_logic;
	signal start_8_rst : std_logic;
	signal start_8_dataInArray_0 : std_logic_vector(0 downto 0);
	signal start_8_pValidArray_0 : std_logic;
	signal start_8_readyArray_0 : std_logic;
	signal start_8_nReadyArray_0 : std_logic;
	signal start_8_validArray_0 : std_logic;
	signal start_8_dataOutArray_0 : std_logic_vector(0 downto 0);

	signal sink_9_clk : std_logic;
	signal sink_9_rst : std_logic;
	signal sink_9_dataInArray_0 : std_logic_vector(0 downto 0);
	signal sink_9_pValidArray_0 : std_logic;
	signal sink_9_readyArray_0 : std_logic;

begin


	mul_1_clk <= clk;
	mul_1_rst <= rst;
	mul_2_pValidArray_0 <= mul_1_validArray_0;
	mul_1_nReadyArray_0 <= mul_2_readyArray_0;
	mul_2_dataInArray_0 <= mul_1_dataOutArray_0;

	mul_2_clk <= clk;
	mul_2_rst <= rst;
	ret_3_pValidArray_0 <= mul_2_validArray_0;
	mul_2_nReadyArray_0 <= ret_3_readyArray_0;
	ret_3_dataInArray_0 <= mul_2_dataOutArray_0;

	ret_3_clk <= clk;
	ret_3_rst <= rst;
	end_7_pValidArray_0 <= ret_3_validArray_0;
	ret_3_nReadyArray_0 <= end_7_readyArray_0;
	end_7_dataInArray_0 <= ret_3_dataOutArray_0;

	a4_clk <= clk;
	a4_rst <= rst;
	a4_dataInArray_0 <= a4_din;
	a4_pValidArray_0 <= start_valid;
	mul_1_pValidArray_0 <= a4_validArray_0;
	a4_nReadyArray_0 <= mul_1_readyArray_0;
	mul_1_dataInArray_0 <= a4_dataOutArray_0;

	b5_clk <= clk;
	b5_rst <= rst;
	b5_dataInArray_0 <= b5_din;
	b5_pValidArray_0 <= start_valid;
	mul_1_pValidArray_1 <= b5_validArray_0;
	b5_nReadyArray_0 <= mul_1_readyArray_1;
	mul_1_dataInArray_1 <= b5_dataOutArray_0;

	c6_clk <= clk;
	c6_rst <= rst;
	c6_dataInArray_0 <= c6_din;
	c6_pValidArray_0 <= start_valid;
	mul_2_pValidArray_1 <= c6_validArray_0;
	c6_nReadyArray_0 <= mul_2_readyArray_1;
	mul_2_dataInArray_1 <= c6_dataOutArray_0;

	end_7_clk <= clk;
	end_7_rst <= rst;
	end_valid <= end_7_validArray_0;
	end_out <= end_7_dataOutArray_0;
	end_7_nReadyArray_0 <= end_ready;

	start_8_clk <= clk;
	start_8_rst <= rst;
	start_8_pValidArray_0 <= start_valid;
	start_ready <= start_8_readyArray_0;
	sink_9_pValidArray_0 <= start_8_validArray_0;
	start_8_nReadyArray_0 <= sink_9_readyArray_0;
	sink_9_dataInArray_0 <= start_8_dataOutArray_0;

	sink_9_clk <= clk;
	sink_9_rst <= rst;

mul_1: entity work.mul_op(arch) generic map (2,1,32,32)
port map (
	clk => mul_1_clk,
	rst => mul_1_rst,
	dataInArray(0) => mul_1_dataInArray_0,
	dataInArray(1) => mul_1_dataInArray_1,
	pValidArray(0) => mul_1_pValidArray_0,
	pValidArray(1) => mul_1_pValidArray_1,
	readyArray(0) => mul_1_readyArray_0,
	readyArray(1) => mul_1_readyArray_1,
	nReadyArray(0) => mul_1_nReadyArray_0,
	validArray(0) => mul_1_validArray_0,
	dataOutArray(0) => mul_1_dataOutArray_0
);

mul_2: entity work.mul_op(arch) generic map (2,1,32,32)
port map (
	clk => mul_2_clk,
	rst => mul_2_rst,
	dataInArray(0) => mul_2_dataInArray_0,
	dataInArray(1) => mul_2_dataInArray_1,
	pValidArray(0) => mul_2_pValidArray_0,
	pValidArray(1) => mul_2_pValidArray_1,
	readyArray(0) => mul_2_readyArray_0,
	readyArray(1) => mul_2_readyArray_1,
	nReadyArray(0) => mul_2_nReadyArray_0,
	validArray(0) => mul_2_validArray_0,
	dataOutArray(0) => mul_2_dataOutArray_0
);

ret_3: entity work.ret_op(arch) generic map (1,1,32,32)
port map (
	clk => ret_3_clk,
	rst => ret_3_rst,
	dataInArray(0) => ret_3_dataInArray_0,
	pValidArray(0) => ret_3_pValidArray_0,
	readyArray(0) => ret_3_readyArray_0,
	nReadyArray(0) => ret_3_nReadyArray_0,
	validArray(0) => ret_3_validArray_0,
	dataOutArray(0) => ret_3_dataOutArray_0
);

a4: entity work.start_node(arch) generic map (1,1,32,32)
port map (
	clk => a4_clk,
	rst => a4_rst,
	dataInArray(0) => a4_dataInArray_0,
	pValidArray(0) => a4_pValidArray_0,
	readyArray(0) => a4_readyArray_0,
	nReadyArray(0) => a4_nReadyArray_0,
	validArray(0) => a4_validArray_0,
	dataOutArray(0) => a4_dataOutArray_0
);

b5: entity work.start_node(arch) generic map (1,1,32,32)
port map (
	clk => b5_clk,
	rst => b5_rst,
	dataInArray(0) => b5_dataInArray_0,
	pValidArray(0) => b5_pValidArray_0,
	readyArray(0) => b5_readyArray_0,
	nReadyArray(0) => b5_nReadyArray_0,
	validArray(0) => b5_validArray_0,
	dataOutArray(0) => b5_dataOutArray_0
);

c6: entity work.start_node(arch) generic map (1,1,32,32)
port map (
	clk => c6_clk,
	rst => c6_rst,
	dataInArray(0) => c6_dataInArray_0,
	pValidArray(0) => c6_pValidArray_0,
	readyArray(0) => c6_readyArray_0,
	nReadyArray(0) => c6_nReadyArray_0,
	validArray(0) => c6_validArray_0,
	dataOutArray(0) => c6_dataOutArray_0
);

end_7: entity work.end_node(arch) generic map (1,0,1,32,32)
port map (
	clk => end_7_clk,
	rst => end_7_rst,
	dataInArray(0) => end_7_dataInArray_0,
	pValidArray(0) => end_7_pValidArray_0,
	readyArray(0) => end_7_readyArray_0,
	dataOutArray(0) => end_7_dataOutArray_0,
	validArray(0) => end_7_validArray_0,
	nReadyArray(0) => end_7_nReadyArray_0
);

start_8: entity work.start_node(arch) generic map (1,1,1,1)
port map (
	clk => start_8_clk,
	rst => start_8_rst,
	dataInArray(0) => start_8_dataInArray_0,
	pValidArray(0) => start_8_pValidArray_0,
	readyArray(0) => start_8_readyArray_0,
	nReadyArray(0) => start_8_nReadyArray_0,
	validArray(0) => start_8_validArray_0,
	dataOutArray(0) => start_8_dataOutArray_0
);

sink_9: entity work.sink(arch) generic map (1,0,1,32)
port map (
	clk => sink_9_clk,
	rst => sink_9_rst,
	dataInArray(0) => sink_9_dataInArray_0,
	pValidArray(0) => sink_9_pValidArray_0,
	readyArray(0) => sink_9_readyArray_0
);

end behavioral; 
